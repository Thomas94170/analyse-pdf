generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
   id            String         @id @default(uuid())
   email         String         @unique
   password      String
   documents Document[]
  invoices  Invoice[]
  incomes   Income[]
}

model Document {
  id            String         @id @default(uuid())
  filename      String
  originalName  String         @unique
  url           String
  type          DocumentType   @default(AUTRE)
  status        DocumentStatus @default(IN_PROGRESS)
  textExtracted String?
  createdAt     DateTime       @default(now())
  metadata      Json?
  userId        String
  user          User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  Income        Income[]
}

model Income {
  id         String    @id @default(uuid())
  year       Int
  month      Int?
  amount     Float
  documentId String?
  createdAt  DateTime  @default(now())
  invoiceId  String?
   userId     String
   user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  document   Document? @relation(fields: [documentId], references: [id], onDelete: Cascade)
  invoice    Invoice?  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
}

model Invoice {
  id           String        @id @default(uuid())
  createdAt    DateTime      @default(now())
  dueDate      DateTime      @default(now())
  totalBT      Float
  totalInclTax Float
  client       String
  email        String?
  phoneNumber  String?
  status       InvoiceStatus @default(ON_HOLD)
  invoiceName  String        @unique
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Income       Income[]
}

enum InvoiceStatus {
  ON_HOLD
  PAID
}

enum DocumentType {
  FACTURE
  CERFA
  AUTRE
  DEVIS
}

enum DocumentStatus {
  IN_PROGRESS
  VALIDATED
  REJECTED
}
